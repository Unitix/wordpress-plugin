'use client';

import Cookies from 'js-cookie';
import { useMerchiCheckboutContext } from './MerchiCheckoutProvider';
import { tabIdComplete } from '../tabs_utils';
import TitleStep from './TitleStep';
import TabPane from './TabPane';
import InvoiceInfo from './InvoiceInfo';
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
function TabPaneSubmitted() {
  var _useMerchiCheckboutCo = useMerchiCheckboutContext(),
    classNameMerchiCheckoutButtonPrimary = _useMerchiCheckboutCo.classNameMerchiCheckoutButtonPrimary,
    classNameMerchiCheckoutButtonPrimaryBlock = _useMerchiCheckboutCo.classNameMerchiCheckoutButtonPrimaryBlock,
    classNameMerchiCheckoutButtonSecondary = _useMerchiCheckboutCo.classNameMerchiCheckoutButtonSecondary,
    classNameMerchiCheckoutButtonSecondaryBlock = _useMerchiCheckboutCo.classNameMerchiCheckoutButtonSecondaryBlock,
    invoice = _useMerchiCheckboutCo.invoice,
    isBuyRequest = _useMerchiCheckboutCo.isBuyRequest,
    isProductEmbedForm = _useMerchiCheckboutCo.isProductEmbedForm,
    job = _useMerchiCheckboutCo.job,
    messageSuccessBuyRequest = _useMerchiCheckboutCo.messageSuccessBuyRequest,
    messageSuccessQuoteRequest = _useMerchiCheckboutCo.messageSuccessQuoteRequest,
    urlFrontend = _useMerchiCheckboutCo.urlFrontend;
  var activeSession = Cookies.get('session_token');
  var msg = isBuyRequest ? messageSuccessBuyRequest : messageSuccessQuoteRequest;
  return /*#__PURE__*/_jsxs(TabPane, {
    tabId: tabIdComplete,
    children: [/*#__PURE__*/_jsx(TitleStep, {
      title: "Thank You - ".concat(isBuyRequest ? 'Received' : 'Submitted')
    }), !!(isBuyRequest && invoice) && /*#__PURE__*/_jsx(InvoiceInfo, {}), /*#__PURE__*/_jsx("div", {
      className: "d-flex justify-content-center",
      children: /*#__PURE__*/_jsxs("div", {
        className: "w-100",
        children: [/*#__PURE__*/_jsx("div", {
          className: "py-3",
          children: /*#__PURE__*/_jsx("p", {
            children: msg
          })
        }), /*#__PURE__*/_jsx("div", {
          className: "d-none d-sm-flex justify-content-between",
          children: isProductEmbedForm ? /*#__PURE__*/_jsx("a", {
            className: classNameMerchiCheckoutButtonPrimary,
            href: "".concat(window.location),
            children: "Done!"
          }) : /*#__PURE__*/_jsxs(_Fragment, {
            children: [/*#__PURE__*/_jsx("a", {
              className: classNameMerchiCheckoutButtonSecondary,
              href: "/customisable-merchandise",
              children: "View More Merch"
            }), !!(activeSession && job.id && !isBuyRequest) && /*#__PURE__*/_jsx("a", {
              className: classNameMerchiCheckoutButtonPrimary,
              href: "".concat(urlFrontend, "jobs/").concat(job.id, "/"),
              children: "View Job"
            })]
          })
        }), /*#__PURE__*/_jsx("div", {
          className: "d-sm-none",
          children: isProductEmbedForm ? /*#__PURE__*/_jsx("a", {
            className: classNameMerchiCheckoutButtonPrimaryBlock,
            href: "".concat(window.location),
            children: "Done!"
          }) : /*#__PURE__*/_jsxs(_Fragment, {
            children: [/*#__PURE__*/_jsx("a", {
              className: classNameMerchiCheckoutButtonPrimaryBlock,
              href: "/customisable-merchandise",
              children: "View More Merch"
            }), !!(activeSession && job.id && !isBuyRequest) && /*#__PURE__*/_jsx("a", {
              className: classNameMerchiCheckoutButtonSecondaryBlock,
              href: "".concat(urlFrontend, "jobs/").concat(job.id, "/"),
              children: "View Job"
            })]
          })
        })]
      })
    })]
  });
}
export default TabPaneSubmitted;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,