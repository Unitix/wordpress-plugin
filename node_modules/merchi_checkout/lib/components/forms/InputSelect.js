'use client';

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : String(i); }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
import { v4 as uuidv4 } from 'uuid';
import { useController } from 'react-hook-form';
import { useMerchiCheckboutContext } from '../MerchiCheckoutProvider';
import InputError from './InputError';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
function InputSelect(_ref) {
  var control = _ref.control,
    label = _ref.label,
    name = _ref.name,
    options = _ref.options,
    rules = _ref.rules;
  var _useMerchiCheckboutCo = useMerchiCheckboutContext(),
    classNameMerchiCheckoutFormGroup = _useMerchiCheckboutCo.classNameMerchiCheckoutFormGroup,
    classNameMerchiCheckoutFormInput = _useMerchiCheckboutCo.classNameMerchiCheckoutFormInput;
  var _useController = useController({
      name: name,
      control: control,
      rules: rules,
      defaultValue: ''
    }),
    field = _useController.field,
    _useController$fieldS = _useController.fieldState,
    error = _useController$fieldS.error,
    invalid = _useController$fieldS.invalid;
  return /*#__PURE__*/_jsxs("div", {
    className: classNameMerchiCheckoutFormGroup,
    children: [label && /*#__PURE__*/_jsx("label", {
      children: label
    }), /*#__PURE__*/_jsx("select", _objectSpread(_objectSpread({}, field), {}, {
      className: "".concat(classNameMerchiCheckoutFormInput, " ").concat(invalid && ' is-invalid'),
      children: options.map(function (option, index) {
        return /*#__PURE__*/_jsx("option", {
          value: option.value,
          children: option.label
        }, index + uuidv4());
      })
    })), /*#__PURE__*/_jsx(InputError, {
      error: error
    })]
  });
}
export default InputSelect;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfdHlwZW9mIiwibyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiY29uc3RydWN0b3IiLCJwcm90b3R5cGUiLCJvd25LZXlzIiwiZSIsInIiLCJ0IiwiT2JqZWN0Iiwia2V5cyIsImdldE93blByb3BlcnR5U3ltYm9scyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJpIiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwidG9QcmltaXRpdmUiLCJjYWxsIiwiVHlwZUVycm9yIiwiTnVtYmVyIiwidjQiLCJ1dWlkdjQiLCJ1c2VDb250cm9sbGVyIiwidXNlTWVyY2hpQ2hlY2tib3V0Q29udGV4dCIsIklucHV0RXJyb3IiLCJqc3giLCJfanN4IiwianN4cyIsIl9qc3hzIiwiSW5wdXRTZWxlY3QiLCJfcmVmIiwiY29udHJvbCIsImxhYmVsIiwibmFtZSIsIm9wdGlvbnMiLCJydWxlcyIsIl91c2VNZXJjaGlDaGVja2JvdXRDbyIsImNsYXNzTmFtZU1lcmNoaUNoZWNrb3V0Rm9ybUdyb3VwIiwiY2xhc3NOYW1lTWVyY2hpQ2hlY2tvdXRGb3JtSW5wdXQiLCJfdXNlQ29udHJvbGxlciIsImRlZmF1bHRWYWx1ZSIsImZpZWxkIiwiX3VzZUNvbnRyb2xsZXIkZmllbGRTIiwiZmllbGRTdGF0ZSIsImVycm9yIiwiaW52YWxpZCIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwiY29uY2F0IiwibWFwIiwib3B0aW9uIiwiaW5kZXgiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9mb3Jtcy9JbnB1dFNlbGVjdC50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuaW1wb3J0IHsgdjQgYXMgdXVpZHY0IH0gZnJvbSAndXVpZCc7XG5pbXBvcnQgeyB1c2VDb250cm9sbGVyIH0gZnJvbSAncmVhY3QtaG9vay1mb3JtJztcbmltcG9ydCB7IHVzZU1lcmNoaUNoZWNrYm91dENvbnRleHQgfSBmcm9tICcuLi9NZXJjaGlDaGVja291dFByb3ZpZGVyJztcbmltcG9ydCBJbnB1dEVycm9yIGZyb20gJy4vSW5wdXRFcnJvcic7XG5cbmludGVyZmFjZSBPcHRpb24ge1xuICBsYWJlbDogc3RyaW5nO1xuICB2YWx1ZTogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgUHJvcHMge1xuICBjb250cm9sOiBhbnk7XG4gIGxhYmVsPzogc3RyaW5nO1xuICBuYW1lOiBzdHJpbmc7XG4gIG9wdGlvbnM6IE9wdGlvbltdO1xuICBydWxlcz86IGFueTtcbn1cblxuZnVuY3Rpb24gSW5wdXRTZWxlY3Qoe1xuICBjb250cm9sLFxuICBsYWJlbCxcbiAgbmFtZSxcbiAgb3B0aW9ucyxcbiAgcnVsZXMsXG59OiBQcm9wcykge1xuICBjb25zdCB7XG4gICAgY2xhc3NOYW1lTWVyY2hpQ2hlY2tvdXRGb3JtR3JvdXAsXG4gICAgY2xhc3NOYW1lTWVyY2hpQ2hlY2tvdXRGb3JtSW5wdXQsXG4gIH0gPSB1c2VNZXJjaGlDaGVja2JvdXRDb250ZXh0KCk7XG4gIGNvbnN0IHtcbiAgICBmaWVsZCxcbiAgICBmaWVsZFN0YXRlOiB7IGVycm9yLCBpbnZhbGlkIH1cbiAgfSA9IHVzZUNvbnRyb2xsZXIoe1xuICAgIG5hbWUsXG4gICAgY29udHJvbCxcbiAgICBydWxlcyxcbiAgICBkZWZhdWx0VmFsdWU6ICcnLFxuICB9KTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbGFzc05hbWVNZXJjaGlDaGVja291dEZvcm1Hcm91cH0+XG4gICAgICB7bGFiZWwgJiYgPGxhYmVsPntsYWJlbH08L2xhYmVsPn1cbiAgICAgIDxzZWxlY3RcbiAgICAgICAgey4uLmZpZWxkfVxuICAgICAgICBjbGFzc05hbWU9e2Ake2NsYXNzTmFtZU1lcmNoaUNoZWNrb3V0Rm9ybUlucHV0fSAke2ludmFsaWQgJiYgJyBpcy1pbnZhbGlkJ31gfVxuICAgICAgPlxuICAgICAgICB7b3B0aW9ucy5tYXAoKG9wdGlvbiwgaW5kZXgpID0+IChcbiAgICAgICAgICA8b3B0aW9uIGtleT17aW5kZXggKyB1dWlkdjQoKX0gdmFsdWU9e29wdGlvbi52YWx1ZX0+XG4gICAgICAgICAgICB7b3B0aW9uLmxhYmVsfVxuICAgICAgICAgIDwvb3B0aW9uPlxuICAgICAgICApKX1cbiAgICAgIDwvc2VsZWN0PlxuICAgICAgPElucHV0RXJyb3IgZXJyb3I9e2Vycm9yfSAvPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBJbnB1dFNlbGVjdDtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFBQyxTQUFBQSxRQUFBQyxDQUFBLHNDQUFBRCxPQUFBLHdCQUFBRSxNQUFBLHVCQUFBQSxNQUFBLENBQUFDLFFBQUEsYUFBQUYsQ0FBQSxrQkFBQUEsQ0FBQSxnQkFBQUEsQ0FBQSxXQUFBQSxDQUFBLHlCQUFBQyxNQUFBLElBQUFELENBQUEsQ0FBQUcsV0FBQSxLQUFBRixNQUFBLElBQUFELENBQUEsS0FBQUMsTUFBQSxDQUFBRyxTQUFBLHFCQUFBSixDQUFBLEtBQUFELE9BQUEsQ0FBQUMsQ0FBQTtBQUFBLFNBQUFLLFFBQUFDLENBQUEsRUFBQUMsQ0FBQSxRQUFBQyxDQUFBLEdBQUFDLE1BQUEsQ0FBQUMsSUFBQSxDQUFBSixDQUFBLE9BQUFHLE1BQUEsQ0FBQUUscUJBQUEsUUFBQVgsQ0FBQSxHQUFBUyxNQUFBLENBQUFFLHFCQUFBLENBQUFMLENBQUEsR0FBQUMsQ0FBQSxLQUFBUCxDQUFBLEdBQUFBLENBQUEsQ0FBQVksTUFBQSxXQUFBTCxDQUFBLFdBQUFFLE1BQUEsQ0FBQUks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