'use client';

import { useMerchiCheckboutContext } from '../MerchiCheckoutProvider';
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
function InputAcceptUserTermsAndConditions(_ref) {
  var isChecked = _ref.isChecked,
    setIsChecked = _ref.setIsChecked;
  var _useMerchiCheckboutCo = useMerchiCheckboutContext(),
    classNameMerchiCheckoutFormCheckbox = _useMerchiCheckboutCo.classNameMerchiCheckoutFormCheckbox,
    classNameMerchiCheckoutFormGroupCheckbox = _useMerchiCheckboutCo.classNameMerchiCheckoutFormGroupCheckbox,
    classNameMerchiCheckoutFormLabelCheckbox = _useMerchiCheckboutCo.classNameMerchiCheckoutFormLabelCheckbox;
  return /*#__PURE__*/_jsx("div", {
    onClick: function onClick() {
      return setIsChecked(!isChecked);
    },
    className: classNameMerchiCheckoutFormGroupCheckbox,
    children: /*#__PURE__*/_jsxs("label", {
      className: classNameMerchiCheckoutFormLabelCheckbox,
      children: [/*#__PURE__*/_jsx("input", {
        className: classNameMerchiCheckoutFormCheckbox,
        defaultChecked: isChecked,
        type: "checkbox"
      }), ' ', /*#__PURE__*/_jsxs("span", {
        style: {
          fontSize: '14px'
        },
        className: "text-muted",
        children: ["I agree to the user profile", ' ', /*#__PURE__*/_jsx("a", {
          href: "/terms-and-conditions/user/",
          target: "_blank",
          children: "terms & conditions"
        }), "."]
      })]
    })
  });
}
export default InputAcceptUserTermsAndConditions;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJ1c2VNZXJjaGlDaGVja2JvdXRDb250ZXh0IiwianN4IiwiX2pzeCIsImpzeHMiLCJfanN4cyIsIklucHV0QWNjZXB0VXNlclRlcm1zQW5kQ29uZGl0aW9ucyIsIl9yZWYiLCJpc0NoZWNrZWQiLCJzZXRJc0NoZWNrZWQiLCJfdXNlTWVyY2hpQ2hlY2tib3V0Q28iLCJjbGFzc05hbWVNZXJjaGlDaGVja291dEZvcm1DaGVja2JveCIsImNsYXNzTmFtZU1lcmNoaUNoZWNrb3V0Rm9ybUdyb3VwQ2hlY2tib3giLCJjbGFzc05hbWVNZXJjaGlDaGVja291dEZvcm1MYWJlbENoZWNrYm94Iiwib25DbGljayIsImNsYXNzTmFtZSIsImNoaWxkcmVuIiwiZGVmYXVsdENoZWNrZWQiLCJ0eXBlIiwic3R5bGUiLCJmb250U2l6ZSIsImhyZWYiLCJ0YXJnZXQiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9mb3Jtcy9JbnB1dEFjY2VwdFVzZXJUZXJtc0FuZENvbmRpdGlvbnMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2UgY2xpZW50JztcbmltcG9ydCB7IHVzZU1lcmNoaUNoZWNrYm91dENvbnRleHQgfSBmcm9tICcuLi9NZXJjaGlDaGVja291dFByb3ZpZGVyJztcblxuaW50ZXJmYWNlIFByb3BzIHtcbiAgaXNDaGVja2VkOiBib29sZWFuO1xuICBzZXRJc0NoZWNrZWQ6IChpc0NoZWNrZWQ6IGJvb2xlYW4pID0+IHZvaWQ7XG59XG5cbmZ1bmN0aW9uIElucHV0QWNjZXB0VXNlclRlcm1zQW5kQ29uZGl0aW9ucyh7IGlzQ2hlY2tlZCwgc2V0SXNDaGVja2VkIH06IFByb3BzKSB7XG4gIGNvbnN0IHtcbiAgICBjbGFzc05hbWVNZXJjaGlDaGVja291dEZvcm1DaGVja2JveCxcbiAgICBjbGFzc05hbWVNZXJjaGlDaGVja291dEZvcm1Hcm91cENoZWNrYm94LFxuICAgIGNsYXNzTmFtZU1lcmNoaUNoZWNrb3V0Rm9ybUxhYmVsQ2hlY2tib3gsXG4gIH0gPSB1c2VNZXJjaGlDaGVja2JvdXRDb250ZXh0KCk7XG4gIHJldHVybiAoXG4gICAgPGRpdlxuICAgICAgb25DbGljaz17XG4gICAgICAgICgpID0+IHNldElzQ2hlY2tlZCghaXNDaGVja2VkKVxuICAgICAgfVxuICAgICAgY2xhc3NOYW1lPXtjbGFzc05hbWVNZXJjaGlDaGVja291dEZvcm1Hcm91cENoZWNrYm94fVxuICAgID5cbiAgICAgIDxsYWJlbCBjbGFzc05hbWU9e2NsYXNzTmFtZU1lcmNoaUNoZWNrb3V0Rm9ybUxhYmVsQ2hlY2tib3h9PlxuICAgICAgICA8aW5wdXRcbiAgICAgICAgICBjbGFzc05hbWU9e2NsYXNzTmFtZU1lcmNoaUNoZWNrb3V0Rm9ybUNoZWNrYm94fVxuICAgICAgICAgIGRlZmF1bHRDaGVja2VkPXtpc0NoZWNrZWR9XG4gICAgICAgICAgdHlwZT0nY2hlY2tib3gnXG4gICAgICAgIC8+XG4gICAgICAgIHsnICd9XG4gICAgICAgIDxzcGFuIHN0eWxlPXt7IGZvbnRTaXplOiAnMTRweCcgfX0gY2xhc3NOYW1lPSd0ZXh0LW11dGVkJz5cbiAgICAgICAgICBJIGFncmVlIHRvIHRoZSB1c2VyIHByb2ZpbGV7JyAnfVxuICAgICAgICAgIDxhIGhyZWY9Jy90ZXJtcy1hbmQtY29uZGl0aW9ucy91c2VyLydcbiAgICAgICAgICAgIHRhcmdldD0nX2JsYW5rJ1xuICAgICAgICAgID5cbiAgICAgICAgICAgIHRlcm1zICZhbXA7IGNvbmRpdGlvbnNcbiAgICAgICAgICA8L2E+LlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L2xhYmVsPlxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBJbnB1dEFjY2VwdFVzZXJUZXJtc0FuZENvbmRpdGlvbnM7XG4iXSwibWFwcGluZ3MiOiJBQUFBLFlBQVk7O0FBQ1osU0FBU0EseUJBQXlCLFFBQVEsMkJBQTJCO0FBQUMsU0FBQUMsR0FBQSxJQUFBQyxJQUFBO0FBQUEsU0FBQUMsSUFBQSxJQUFBQyxLQUFBO0FBT3RFLFNBQVNDLGlDQUFpQ0EsQ0FBQUMsSUFBQSxFQUFxQztFQUFBLElBQWxDQyxTQUFTLEdBQUFELElBQUEsQ0FBVEMsU0FBUztJQUFFQyxZQUFZLEdBQUFGLElBQUEsQ0FBWkUsWUFBWTtFQUNsRSxJQUFBQyxxQkFBQSxHQUlJVCx5QkFBeUIsQ0FBQyxDQUFDO0lBSDdCVSxtQ0FBbUMsR0FBQUQscUJBQUEsQ0FBbkNDLG1DQUFtQztJQUNuQ0Msd0NBQXdDLEdBQUFGLHFCQUFBLENBQXhDRSx3Q0FBd0M7SUFDeENDLHdDQUF3QyxHQUFBSCxxQkFBQSxDQUF4Q0csd0NBQXdDO0VBRTFDLG9CQUNFVixJQUFBO0lBQ0VXLE9BQU8sRUFDTCxTQUFBQSxRQUFBO01BQUEsT0FBTUwsWUFBWSxDQUFDLENBQUNELFNBQVMsQ0FBQztJQUFBLENBQy9CO0lBQ0RPLFNBQVMsRUFBRUgsd0NBQXlDO0lBQUFJLFFBQUEsZUFFcERYLEtBQUE7TUFBT1UsU0FBUyxFQUFFRix3Q0FBeUM7TUFBQUcsUUFBQSxnQkFDekRiLElBQUE7UUFDRVksU0FBUyxFQUFFSixtQ0FBb0M7UUFDL0NNLGNBQWMsRUFBRVQsU0FBVTtRQUMxQlUsSUFBSSxFQUFDO01BQVUsQ0FDaEIsQ0FBQyxFQUNELEdBQUcsZUFDSmIsS0FBQTtRQUFNYyxLQUFLLEVBQUU7VUFBRUMsUUFBUSxFQUFFO1FBQU8sQ0FBRTtRQUFDTCxTQUFTLEVBQUMsWUFBWTtRQUFBQyxRQUFBLEdBQUMsNkJBQzdCLEVBQUMsR0FBRyxlQUMvQmIsSUFBQTtVQUFHa0IsSUFBSSxFQUFDLDZCQUE2QjtVQUNuQ0MsTUFBTSxFQUFDLFFBQVE7VUFBQU4sUUFBQSxFQUNoQjtRQUVELENBQUcsQ0FBQyxLQUNOO01BQUEsQ0FBTSxDQUFDO0lBQUEsQ0FDRjtFQUFDLENBQ0wsQ0FBQztBQUVWO0FBRUEsZUFBZVYsaUNBQWlDIn0=