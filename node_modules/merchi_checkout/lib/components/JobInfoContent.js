'use client';

import { formatCurrency, currencyTotalCostShowIncTax } from './currency';
import { isInstructionsType, isProductSupplierMOD, isSelectable } from '../utils';
import { useMerchiCheckboutContext } from './MerchiCheckoutProvider';
import { jsxs as _jsxs } from "react/jsx-runtime";
import { jsx as _jsx } from "react/jsx-runtime";
import { Fragment as _Fragment } from "react/jsx-runtime";
function formatCost(product, cost) {
  var currency = product.currency ? product.currency : 'AUD';
  return formatCurrency(cost, {
    currency: currency,
    showCodeIfNoSymbol: false
  });
}
function ProductCostRow(_ref) {
  var job = _ref.job;
  var quantity = job ? job.quantity : 0;
  return /*#__PURE__*/_jsxs("p", {
    className: "d-block mt-4 mb-0",
    children: ["Total Quantity: ", quantity]
  });
}
function VariationInfoBody(_ref2) {
  var cost = _ref2.cost,
    name = _ref2.name,
    product = _ref2.product,
    value = _ref2.value,
    files = _ref2.files,
    type = _ref2.type;
  return /*#__PURE__*/_jsxs("div", {
    children: [/*#__PURE__*/_jsx("small", {
      className: "mb-1",
      children: name
    }), /*#__PURE__*/_jsxs("div", {
      className: "mb-0",
      children: [/*#__PURE__*/_jsx("div", {
        className: "d-flex",
        style: {
          gap: '0.5rem'
        },
        children: files && files.map(function (file) {
          return /*#__PURE__*/_jsx("img", {
            className: "modal-merchi-checkout-job-info-content-img",
            src: file.viewUrl,
            alt: file.name
          }, file.viewUrl);
        })
      }), type === 10 && /*#__PURE__*/_jsx("div", {
        style: {
          backgroundColor: "".concat(value)
        },
        className: "color-indicator"
      }), value && value, " ", cost ? "+ ".concat(formatCost(product, cost)) : '', files.length == 0 && !value && '-']
    })]
  });
}
function VariationOptionsInfoBody(_ref3) {
  var name = _ref3.name,
    selectedOptions = _ref3.selectedOptions,
    sellerProductEditable = _ref3.sellerProductEditable,
    product = _ref3.product;
  var firstOption = selectedOptions[0];
  return /*#__PURE__*/_jsx(_Fragment, {
    children: selectedOptions.length > 1 ? /*#__PURE__*/_jsxs("div", {
      children: [/*#__PURE__*/_jsx("small", {
        className: "mb-1",
        children: name
      }), /*#__PURE__*/_jsx("ul", {
        className: "list-unstyled m-0 m-b-5",
        children: selectedOptions.map(function (o, i) {
          return /*#__PURE__*/_jsxs("li", {
            children: [o.value, ' ', Boolean(o.totalCost && !sellerProductEditable) ? " + ".concat(formatCost(product, o.totalCost)) : '']
          }, "".concat(i, "-option-key-").concat(o.optionId));
        })
      })]
    }) : firstOption ? /*#__PURE__*/_jsxs("div", {
      children: [/*#__PURE__*/_jsx("small", {
        className: "mb-1",
        children: name
      }), /*#__PURE__*/_jsxs("p", {
        className: "mb-0",
        children: [firstOption.value, Boolean(firstOption.totalCost) ? " + ".concat(formatCost(product, firstOption.totalCost)) : '']
      })]
    }) : /*#__PURE__*/_jsxs("div", {
      children: [/*#__PURE__*/_jsx("small", {
        className: "mb-1",
        children: name
      }), /*#__PURE__*/_jsx("p", {
        className: "mb-0",
        children: "-"
      })]
    })
  });
}
function VariationInfo(_ref4) {
  var product = _ref4.product,
    variation = _ref4.variation;
  var selectedOptions = variation.selectedOptions,
    variationField = variation.variationField,
    variationFiles = variation.variationFiles;
  var fieldType = variationField.fieldType,
    sellerProductEditable = variationField.sellerProductEditable;
  var isVariationSelectable = isSelectable(fieldType);
  var options = selectedOptions;
  return /*#__PURE__*/_jsx("div", {
    children: isVariationSelectable && options ? /*#__PURE__*/_jsx(_Fragment, {
      children: /*#__PURE__*/_jsx(VariationOptionsInfoBody, {
        name: variationField.name,
        type: variationField.fieldType,
        value: variation.value,
        product: product,
        files: variationFiles,
        selectedOptions: options,
        sellerProductEditable: sellerProductEditable
      })
    }) : /*#__PURE__*/_jsx(_Fragment, {
      children: /*#__PURE__*/_jsx(VariationInfoBody, {
        name: variationField.name,
        type: variationField.fieldType,
        value: variation.value,
        files: variationFiles,
        product: product,
        cost: sellerProductEditable ? 0 : variation.cost
      })
    })
  });
}
function VariationsInfo(_ref5) {
  var product = _ref5.product,
    quantity = _ref5.quantity,
    _ref5$variations = _ref5.variations,
    variations = _ref5$variations === void 0 ? [] : _ref5$variations;
  return /*#__PURE__*/_jsx("div", {
    className: "d-flex flex-column",
    style: {
      gap: '1rem'
    },
    children: variations.map(function (v, i) {
      return !isInstructionsType(v.variationField.fieldType) ? /*#__PURE__*/_jsx(VariationInfo, {
        quantity: quantity,
        variation: v,
        product: product
      }, i) : '';
    })
  });
}
function VariationGroupInfo(_ref6) {
  var group = _ref6.group,
    index = _ref6.index,
    product = _ref6.product,
    groupArrayLength = _ref6.groupArrayLength;
  var isResell = isProductSupplierMOD(product);
  var quantity = group.quantity,
    variations = group.variations;
  return /*#__PURE__*/_jsx("div", {
    className: "quote-summary-card ".concat(groupArrayLength === 1 && ' w-100'),
    children: /*#__PURE__*/_jsxs("div", {
      className: "mt-2 d-flex flex-column justify-content-between text-left h-100",
      children: [/*#__PURE__*/_jsxs("div", {
        children: [/*#__PURE__*/_jsxs("small", {
          className: "text-muted",
          children: ["Group ", index + 1]
        }), /*#__PURE__*/_jsx("small", {
          className: "text-muted",
          children: !isResell && " | Quantity: ".concat(quantity)
        })]
      }), /*#__PURE__*/_jsxs("div", {
        className: "pt-2",
        children: [!!(variations && variations.length) && /*#__PURE__*/_jsx("div", {
          children: /*#__PURE__*/_jsxs("strong", {
            children: ["Group ", index + 1, " Detail"]
          })
        }), /*#__PURE__*/_jsx(VariationsInfo, {
          quantity: quantity,
          variations: variations,
          product: product
        })]
      }), /*#__PURE__*/_jsx("div", {
        className: "pt-3",
        children: /*#__PURE__*/_jsxs("div", {
          className: "pt-1",
          style: {
            borderTop: '1px solid #d7d7d7',
            height: '24px'
          },
          children: [/*#__PURE__*/_jsxs("strong", {
            className: "mb-0 float-left float-start",
            children: [isResell ? 'Unit' : "Group", " Cost"]
          }), /*#__PURE__*/_jsx("strong", {
            className: "mb-0 ml-2 float-right float-end",
            children: formatCost(product, group.groupCost)
          })]
        })
      })]
    })
  });
}
export default function JobInfoContent() {
  var _useMerchiCheckboutCo = useMerchiCheckboutContext(),
    job = _useMerchiCheckboutCo.job;
  var product = job.product,
    _job$quantity = job.quantity,
    quantity = _job$quantity === void 0 ? 0 : _job$quantity,
    _job$variations = job.variations,
    variations = _job$variations === void 0 ? [] : _job$variations,
    _job$variationsGroups = job.variationsGroups,
    variationsGroups = _job$variationsGroups === void 0 ? [] : _job$variationsGroups;
  var needsShipping = product.needsShipping;
  var totalCost = currencyTotalCostShowIncTax(job);
  var isResell = isProductSupplierMOD(product);
  var hasGroups = variationsGroups.length > 0;
  return /*#__PURE__*/_jsxs("div", {
    className: "modal-merchi-checkout-job-info-content",
    children: [/*#__PURE__*/_jsx("strong", {
      children: product.name
    }), variationsGroups.length > 0 && /*#__PURE__*/_jsx("div", {
      className: "d-flex flex-wrap justify-content-between",
      style: {
        gap: 30
      },
      children: variationsGroups.map(function (g, i) {
        return g.quantity ? /*#__PURE__*/_jsx("div", {
          className: "w-100",
          children: /*#__PURE__*/_jsx(VariationGroupInfo, {
            groupArrayLength: variationsGroups.length,
            group: g,
            index: i,
            job: job,
            product: product
          }, i)
        }, i + 'jonb-info-content') : '';
      })
    }), /*#__PURE__*/_jsx("div", {
      className: "d-flex justify-content-center parent-variation-card",
      children: /*#__PURE__*/_jsxs("div", {
        className: "text-left mt-1 w-100",
        children: [/*#__PURE__*/_jsx(ProductCostRow, {
          job: job,
          product: product,
          quantity: quantity
        }), /*#__PURE__*/_jsxs("div", {
          children: [!!(variations && variations.length) && /*#__PURE__*/_jsx("strong", {
            className: "mb-0",
            children: "Order Detail"
          }), /*#__PURE__*/_jsx(VariationsInfo, {
            quantity: quantity,
            variations: variations,
            product: product
          })]
        }), !isResell && /*#__PURE__*/_jsxs("div", {
          className: "pt-2 mt-3 total-order-cost-container",
          children: [/*#__PURE__*/_jsx("small", {
            className: "mb-0",
            children: "Total Order Cost"
          }), needsShipping && /*#__PURE__*/_jsx("small", {
            className: "mb-0 ml-1 font-italic",
            children: "ex Shipment"
          }), /*#__PURE__*/_jsx("strong", {
            className: "mb-0 d-block",
            children: totalCost
          })]
        })]
      })
    }), !!(isResell && !hasGroups) && /*#__PURE__*/_jsxs("div", {
      children: [/*#__PURE__*/_jsxs("strong", {
        className: "mb-0",
        children: [isResell ? 'Approximate Unit' : 'Total', " Cost"]
      }), ' ', /*#__PURE__*/_jsx("strong", {
        className: "mb-0 d-block",
        children: totalCost
      })]
    })]
  });
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,