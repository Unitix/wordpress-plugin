'use client';

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
import { useState, useRef, useEffect } from 'react';
import { jsx as _jsx } from "react/jsx-runtime";
function Collapse(_ref) {
  var isOpen = _ref.isOpen,
    children = _ref.children;
  var _useState = useState(isOpen ? 'auto' : '0'),
    _useState2 = _slicedToArray(_useState, 2),
    height = _useState2[0],
    setHeight = _useState2[1];
  var ref = useRef(null);
  useEffect(function () {
    setHeight(isOpen ? "".concat(ref.current.scrollHeight, "px") : '0');
  }, [isOpen]);
  return /*#__PURE__*/_jsx("div", {
    className: "merchi-collapse ".concat(isOpen ? 'show' : ''),
    ref: ref,
    style: {
      transition: 'height 0.35s ease',
      overflow: 'hidden',
      height: height
    },
    children: children
  });
}
export default Collapse;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfc2xpY2VkVG9BcnJheSIsImFyciIsImkiLCJfYXJyYXlXaXRoSG9sZXMiLCJfaXRlcmFibGVUb0FycmF5TGltaXQiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJfbm9uSXRlcmFibGVSZXN0IiwiVHlwZUVycm9yIiwibyIsIm1pbkxlbiIsIl9hcnJheUxpa2VUb0FycmF5IiwibiIsIk9iamVjdCIsInByb3RvdHlwZSIsInRvU3RyaW5nIiwiY2FsbCIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiQXJyYXkiLCJmcm9tIiwidGVzdCIsImxlbiIsImxlbmd0aCIsImFycjIiLCJyIiwibCIsInQiLCJTeW1ib2wiLCJpdGVyYXRvciIsImUiLCJ1IiwiYSIsImYiLCJuZXh0IiwiZG9uZSIsInB1c2giLCJ2YWx1ZSIsImlzQXJyYXkiLCJ1c2VTdGF0ZSIsInVzZVJlZiIsInVzZUVmZmVjdCIsImpzeCIsIl9qc3giLCJDb2xsYXBzZSIsIl9yZWYiLCJpc09wZW4iLCJjaGlsZHJlbiIsIl91c2VTdGF0ZSIsIl91c2VTdGF0ZTIiLCJoZWlnaHQiLCJzZXRIZWlnaHQiLCJyZWYiLCJjb25jYXQiLCJjdXJyZW50Iiwic2Nyb2xsSGVpZ2h0IiwiY2xhc3NOYW1lIiwic3R5bGUiLCJ0cmFuc2l0aW9uIiwib3ZlcmZsb3ciXSwic291cmNlcyI6WyIuLi8uLi9zcmMvY29tcG9uZW50cy9Db2xsYXBzZS50c3giXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBjbGllbnQnO1xuaW1wb3J0IHsgdXNlU3RhdGUsIHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnO1xuXG5mdW5jdGlvbiBDb2xsYXBzZSh7IGlzT3BlbiwgY2hpbGRyZW4gfTogYW55KSB7XG4gIGNvbnN0IFtoZWlnaHQsIHNldEhlaWdodF0gPSB1c2VTdGF0ZShpc09wZW4gPyAnYXV0bycgOiAnMCcpO1xuICBjb25zdCByZWYgPSB1c2VSZWYobnVsbCk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBzZXRIZWlnaHQoaXNPcGVuID8gYCR7KHJlZiBhcyBhbnkpLmN1cnJlbnQuc2Nyb2xsSGVpZ2h0fXB4YCA6ICcwJyk7XG4gIH0sIFtpc09wZW5dKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXZcbiAgICAgIGNsYXNzTmFtZT17YG1lcmNoaS1jb2xsYXBzZSAke2lzT3BlbiA/ICdzaG93JyA6ICcnfWB9XG4gICAgICByZWY9e3JlZn1cbiAgICAgIHN0eWxlPXt7IHRyYW5zaXRpb246ICdoZWlnaHQgMC4zNXMgZWFzZScsIG92ZXJmbG93OiAnaGlkZGVuJywgaGVpZ2h0IH19XG4gICAgPlxuICAgICAge2NoaWxkcmVufVxuICAgIDwvZGl2PlxuICApO1xufVxuXG5leHBvcnQgZGVmYXVsdCBDb2xsYXBzZTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFBQyxTQUFBQSxlQUFBQyxHQUFBLEVBQUFDLENBQUEsV0FBQUMsZUFBQSxDQUFBRixHQUFBLEtBQUFHLHFCQUFBLENBQUFILEdBQUEsRUFBQUMsQ0FBQSxLQUFBRywyQkFBQSxDQUFBSixHQUFBLEVBQUFDLENBQUEsS0FBQUksZ0JBQUE7QUFBQSxTQUFBQSxpQkFBQSxjQUFBQyxTQUFBO0FBQUEsU0FBQUYsNEJBQUFHLENBQUEsRUFBQUMsTUFBQSxTQUFBRCxDQUFBLHFCQUFBQSxDQUFBLHNCQUFBRSxpQkFBQSxDQUFBRixDQUFBLEVBQUFDLE1BQUEsT0FBQUUsQ0FBQSxHQUFBQyxNQUFBLENBQUFDLFNBQUEsQ0FBQUMsUUFBQSxDQUFBQyxJQUFBLENBQUFQLENBQUEsRUFBQVEsS0FBQSxhQUFBTCxDQUFBLGlCQUFBSCxDQUFBLENBQUFTLFdBQUEsRUFBQU4sQ0FBQSxHQUFBSCxDQUFBLENBQUFTLFdBQUEsQ0FBQUMsSUFBQSxNQUFBUCxDQUFBLGNBQUFBLENBQUEsbUJBQUFRLEtBQUEsQ0FBQUMsSUFBQSxDQUFBWixDQUFBLE9BQUFHLENBQUEsK0RBQUFVLElBQUEsQ0FBQVYsQ0FBQSxVQUFBRCxpQkFBQSxDQUFBRixDQUFBLEVB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